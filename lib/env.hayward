/#
Summary: A package for working with environment variables.
#/
package env
  /#
  Summary: Get system environment variables as a hashmap.
  Returns: Hashmap representing system environment variables.
  #/
  fn getvars()
    vars = {}
    cmd = sys::euid() < 0 ? "set" : "env"
    
    for line in sys::execout(cmd).lines() do
      sep = line.index("=")
      vars.set(
        line.substring(0, sep),
        line.substring(1 + sep, line.size() - sep)
      )
    end

    return vars
  end

  /#
  Summary: Get an environment variable.
  Params:
    - _var_name: String containing the environment variable name to retrieve.
  Returns: String containing the environment variable value, an empty string if not found.
  #/
  fn get(_var_name)
    return __env_getenv__(_var_name)
  end

  /#
  Summary: Set an environment variable.
  Params:
    - _var_name: String containing the environment variable name.
    - _var_value: String containing the environment variable value.
  Returns: Boolean indicating success or failure.
  #/
  fn set(_var_name, _var_value)
    return __env_setenv__(_var_name, _var_value)
  end

  /#
  Summary: Unset an environment variable.
  Params:
    - _var_name: String containing the environment variable name.
  Returns: Boolean indicating success or failure.
  #/
  fn unset(_var_name)
    return __env_unsetenv__(_var_name)
  end

  /#
  Summary: Get the path to Hayward.
  Returns: String containing the path to Hayward.
  #/
  fn bin()
    return __env_bin__()
  end

  /#
  Summary: Get the path to the Hayward Standard Library.
  Returns: String containing the path to the Hayward Standard Library.
  #/
  fn haywardlib()
    return __env_lib__()
  end
end

export "env"